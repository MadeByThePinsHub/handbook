# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  BUILDS_TYPE: "develop"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/
    
stages:
  - install
  - build
  - dry-run
  - triage
  - deploy

dependency_installer:
  image: python:3.7
  stage: install
  script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt

dry-run:mkdocs_buildTester:
  image: python:3.7
  stage: dry-run
  script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - bash ./scripts/builds/gitlab-pages/mkdocs_build.sh
  artifacts:
    paths:
      - site
    expire_in: 7 days
  only:
    refs:
      - branches
  except:
    - develop
    - master
    - staging

develop:mkdocs_build:
  image: python:3.7
  stage: build
  script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - bash ./scripts/builds/gitlab-pages/mkdocs_build.sh
  artifacts:
    paths:
      - public
    expire_in: 7 days
    when: on_success
  only:
    refs:
      - develop

staging:mkdocs_build:
  image: python:3.7
  stage: build
  script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - bash ./scripts/builds/gitlab-pages/mkdocs_build.sh
  artifacts:
    paths:
      - public
    expire_in: 7 days
    when: on_success
  only:
    refs:
      - staging
  variables:
    BUILDS_TYPE: "staging"

mkdocs_build:
  image: python:3.7
  stage: build
  script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - bash ./scripts/builds/gitlab-pages/mkdocs_build.sh
  artifacts:
    paths:
      - public
    expire_in: 7 days
    when: on_success
  only:
    refs:
      - master
  variables:
    BUILDS_TYPE: "production"

dry-run:words_counter:
  image: alpine:latest
  stage: dry-run
  script: 
    - bash ./scripts/builds/count-words.sh
  allow_failure: true

dry-run:triage-ops:
  image: ruby:latest
  stage: dry-run
  script: 
    - bash ./scripts/dry-runs/gl-triage-ops.sh
  only:
    - manual
  except:
    - schedules

triage-ops:
  image: ruby:latest
  stage: triage
  script:
    - gem install gitlab-triage
    # Use your own token! Do not steal.
    - gitlab-triage --token $API_TOKEN --source-id  --host-url $HOST_URL
  only:
    - schedules
  except:
    - manual

pages:
  image: ubuntu:latest
  stage: deploy
  script:
    - echo "Doing stuff..."
    - echo "I do nothing because the builds are done."
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    refs:
      - develop
  environment:
    name: develop
    url: https://en.handbooksbythepins.gq
